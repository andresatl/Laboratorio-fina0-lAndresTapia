name: CI
on:
  push:
    branches:
      - feature-laboratorio-final-AndresTapia

jobs:
  Buildapp:
    runs-on: ubuntu-latest
    steps:

    #- name: Set up JDK 17
      #uses: actions/setup-java@v2 
      #with:
        #java-version: '17'
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    - name: Install depencies
      run: npm install

    - name: Build
      run: npm run build

  SAST:
    needs: Buildapp
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      #with:
        #fetch-depth: 0
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    - name: Install depencies
      run: npm install

    - name: Build
      run: npm run build
      
    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.1
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Analisis SonarCloud
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        
    - name: SonarQube Quality Gate Check
      env:
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      uses: SonarSource/sonarqube-quality-gate-action@master
      
#--------------------- SCA -------------------------------------------
  SCA:
    needs: SAST
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    - name: Install depencies
      run: |
        npm install
        yarn install

    - name: Build
      run: npm run build

    - name: Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      env:
        JAVA_HOME: /opt/jdk
      id: Depcheck
      with:
        project: '{{ github.event.repository.name }}'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --failOnCVSS 11
          --enableRetired
     
    - name: Upload Test result
      uses: actions/upload-artifact@master
      with:
        name: Depcheck report
        path: ${{github.workspace}}/reports

# ----------------- Docker Build Image ----------------------------------------
  
  DockerBuild-SCAN:
    needs: SCA
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Docker Login
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Docker Build 
      run: |
        docker build -t andresatl/pruebavul:latest .
#-------------------- Docker Scan ------------------------------------------
    - name: Prisma Cloud Scan
      uses: PaloAltoNetworks/prisma-cloud-scan@v1.6.5
      with:
        pcc_console_url: https://us-east1.cloud.twistlock.com/us-1-113035073
        pcc_user: ${{ secrets.pcc_user }}
        pcc_pass: ${{ secrets.pcc_pass }}
        image_name: andresatl/pruebavul:latest 

    - name: Docker Push 
      run: |
        docker push andresatl/finalat-devsecops:latest


    #- name: Run Trivy vulnerability scanner
      #uses: aquasecurity/trivy-action@master
      #with:
        #image-ref: 'andresatl/pruebavul:latest'
        #ignore-unfixed: true 
        #format: 'table' 
#-------------------- DEPLOY-DAST------------------------------------------  
  DAST:
      needs: DockerBuild-SCAN
      runs-on: ubuntu-latest
      steps:

      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Start Docker
        run: |
          docker run -d --name finalat-devsecops -p 8081:80 andresatl/finalat-devsecops:latest
          
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.12.0
          with:
            target: http://localhost:8081
            allow_issue_writing: false
            artifact_name: 'Zap Report'
            fail_action: true #Break Pipeline
#-------------------- Docker Scan ------------------------------------------

  #DockerScan:
    #needs: DockerBuild
    #runs-on: ubuntu-latest
    #steps:

    #- name: Docker Login
      #uses: docker/login-action@v3.0.0
      #with:
        #username: ${{ secrets.DOCKER_USER }}
       # password: ${{ secrets.DOCKER_PASSWORD }}

    #- name: Pull de la Imagen Docker
      #run: | 
        #docker pull andresatl/finalat-devsecops:latest

    #- name: Run Trivy vulnerability scanner
     # uses: aquasecurity/trivy-action@master
      #with:
        #image-ref: 'andresatl/finalat-devsecops:latest'
        #ignore-unfixed: true 
        #format: 'table'
        
    #- name: Upload scan results
      #uses: actions/upload-artifact@v2
      #with:
        #name: scan-results
       # path: ${{ github.workspace }}/trivy-results
        
    #- name: Push Docker
      #run: |
        #docker push andresatl/finalat-devsecops:latest

        
